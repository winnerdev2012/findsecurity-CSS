@mixin breakpoint($range) {
  @if $range == sm {@media screen and (min-width: $sm) { @content; }}
  @else if $range == md {@media screen and (min-width: $md) { @content; }}
  @else if $range == lg {@media screen and (min-width: $lg) { @content; }}
  @else if $range == xl {@media screen and (min-width: $xl) { @content; }}
  @else if $range == xxl {@media screen and (min-width: $xxl) { @content; }}

  @else if $range == xs-only {@media screen and (min-width: $xs) and (max-width: ($sm - 1)) { @content; }}
  @else if $range == sm-only {@media screen and (min-width: $sm) and (max-width: ($md - 1)) { @content; }}
  @else if $range == md-only {@media screen and (min-width: $md) and (max-width: ($lg - 1)) { @content; }}
  @else if $range == lg-only {@media screen and (min-width: $lg) and (max-width: ($xl - 1)) { @content; }}
  @else if $range == xl-only {@media screen and (min-width: $xl) { @content; }}
  @else if $range == notebook {@media screen and (min-width: 1200px) and (max-width: 1599px) { @content; }}

  @else if $range == sm-down {@media screen and (max-width: ($md - 1)) { @content; }}
  @else if $range == md-down {@media screen and (max-width: ($lg - 1)) { @content; }}
  @else if $range == lg-down {@media screen and (max-width: ($xl - 1)) { @content; }}

  // 1200 - 1439  adaptive for small large screen
  @else if $range == under1400 {@media screen and (min-width: $xl) and (max-width: ($under1400 - 1)) { @content; }}
}


@mixin outline($outline) {
  outline: $outline;
  outline-offset: $outline;
  :active, :hover, :focus {
      outline: $outline;
      outline-offset: $outline;
  }
}

@mixin boxShadow($elevation, $color) {
  box-shadow: $elevation $color;
}

@mixin boxShadow2($elevation1, $color1, $elevation12, $color2) {
  box-shadow: $elevation1 $color1, $elevation12 $color2;
}

@mixin gradientBorder($args...) {
  &:before {
    content: "";
    position: absolute;
    inset: 0;
    border-radius: inherit;
    padding: $args;
    background: linear-gradient(135deg,
                            #E8A3FF 0%,
                            #A8BFFF 15%,
                            #2EFCA8 45%,
                            #A8BFFF 75%,
                            #E8A3FF 90%,
                            #E8A3FF 100%);
    -webkit-mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);
    -webkit-mask-composite: xor;
    mask-composite: exclude;
    pointer-events: none;
  }
}
